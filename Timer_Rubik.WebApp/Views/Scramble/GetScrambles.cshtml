@model List<DTO.Admin.GetScrambleDTO>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Scramble | Adminitrator";
}

<span>Filter: </span>
<select onchange="redirectToPage(this)">
    <option value="a81e2eed-1fab-11ee-9b01-a02bb82e10f9">3x3x3</option>
    <option value="08db8432-4949-4e0a-8087-b23c646db400">4x4x4</option>
    <option value="08db8bee-c2d3-4aaa-83ef-728471e8b34d">5x5x5</option>
</select>
<button id="btn-create" class="btn btn-success float-end">New Scramble</button>

<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Id</th>
            <th>Author</th>
            <th>Category</th>
            <th>Algorithm</th>
            <th>Solve</th>
            <th>Created At</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Count != 0)
        {
            @foreach (var scrambles in Model)
            {
                <tr style="cursor: pointer" class="scrambles" data-id="@scrambles.Id">
                    <td>@scrambles.Id</td>
                    <td>
                        <span>@scrambles.Account.Name</span><br>
                        <small>@scrambles.Account.Email</small>
                    </td>
                    <td>@scrambles.Category.Name</td>
                    <td>@scrambles.Algorithm</td>
                    <td>@(scrambles.Solve != null ? scrambles.Solve : "Not found")</td>
                    <td>@scrambles.CreatedAt.ToString("dd-MM-yyyy")</td>
                </tr>
            }
        }
    </tbody>
</table>

<div class="modal" hidden>
    <div class="overlay"></div>
    <div class="popup p-4">
        <form>
            <h3 class="text-center text-success">Create scramble</h3>
            <div class="mb-3">
                <label for="Category" class="form-label">Category</label><br />
                <select class="w-100" id="Category">
                    <option>3x3x3</option>
                    <option>4x4x4</option>
                    <option>5x5x5</option>
                </select>
            </div>
            <div class="mb-3">
                <label for="Algorithm" class="form-label">Algorithm</label>
                <input type="text" class="form-control" id="Algorithm" required>
            </div>
            <div class="mb-3">
                <label for="Solve" class="form-label">Solve</label>
                <input type="text" class="form-control" id="Solve">
            </div>
            <button type="submit" class="btn btn-danger btn-md w-100">Create Scramble</button>
        </form>
    </div>
</div>

<style>
    .modal {
        position: fixed;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .overlay {
        position: absolute;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.4);
        cursor: pointer;
    }

    .popup {
        position: absolute;
        width: 30%;
        height: 60%;
        background-color: white;
        border-radius: 12px;
        z-index: 1;
    }
</style>

@* This script for filter *@
<script>
    function redirectToPage(selectElement) {
        window.location.href = "/scramble?catId=" + selectElement.value;
    }

    window.onload = function () {
        var urlParams = new URLSearchParams(window.location.search);
        var selectedValue = urlParams.get("catId");
        if (selectedValue) {
            var selectElement = document.querySelector("select");
            selectElement.value = selectedValue;
        }
    }
</script>

@* This script for table *@
<script>
    var trElement = document.querySelectorAll(".scrambles");

    trElement.forEach(element => {
        element.addEventListener("click", () => {
            window.location.href = "/scramble/" + element.getAttribute("data-id");
        })
    })
</script>

@* This script for modal *@
<script>
    var buttonElement = document.querySelector("#btn-create");
    var modalElement = document.querySelector(".modal");
    var overlayElement = document.querySelector(".overlay");

    buttonElement.addEventListener("click", () => {
        modalElement.hidden = false;
    });

    overlayElement.addEventListener("click", () => {
        modalElement.hidden = true;
    })
</script>